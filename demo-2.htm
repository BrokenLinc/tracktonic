<script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script type="text/javascript" src="js/id3.min.js"></script>
<script>
$(function(){

	var CONFIDENCE_THRESHOLD = 6/7; //lower == more sensitive to pace change/inconsistency
	var BPM_CHANGE_THRESHOLD = 7/8; //lower == more aggressive song update

	var now_playing_bpm = 0;
	var last_beat_time = new Date().getTime();
	var recent_bpm_list = [0,0,0,0,0];
	var next_song, now_song;
	var next_audio_index = 1;

	//on_step
	$(document).on('keypress', function(){
		playNextSong();

		var bpm = now_playing_bpm;

		//measure elapsed, convert to bpm
		var beat_time = new Date().getTime();
		var seconds_elapsed = beat_time - last_beat_time;
		var step_bpm = 60*1000/seconds_elapsed;

		//add to recent_bpm_list
		recent_bpm_list.length = recent_bpm_list.length - 1; //chop old
		recent_bpm_list.unshift(Math.round(step_bpm)); //add new

		//measure diff of high/low.
		var conf = confidence(recent_bpm_list); 

		//if it's within threshold AND out of threshold compared to last_bpm, ping on_bpm_changed
		if(conf >= CONFIDENCE_THRESHOLD) {
			bpm = average(recent_bpm_list);
			var bpm_change = bpm/now_playing_bpm;
			if(bpm_change < BPM_CHANGE_THRESHOLD || bpm_change > 1/BPM_CHANGE_THRESHOLD) {
				select_song(bpm);
			}
		}

		//update ui
		$('.js-recent-bpm-list').text(recent_bpm_list.join(','));
		$('.js-signal-noise').text(Math.round(conf*100)+'%')
			.toggleClass('good', conf >= CONFIDENCE_THRESHOLD)
			.toggleClass('bad', conf < CONFIDENCE_THRESHOLD);
		$('.js-bpm').text(bpm);      

		last_beat_time = beat_time;
	});

	//on_bpm_changed
		//update ui
		//choose new song
		//begin transition

	function confidence(a) {
		var low, high;
		for(var i in a) {
			if (!low || a[i]<low) low = a[i];
			if (!high || a[i]>high) high = a[i];
		}
		return low/high;
	}
	function average(a) {
		var tot = 0;
		for(var i in a) {
			tot += a[i];
		}
		return tot/a.length;
	}

	function select_song(optimal_bpm) {
		var search_bpm = optimal_bpm;
		while(search_bpm > 120) search_bpm /= 2; //use only for lookups
		var diff, song;
		console.log('**********');
		console.log(optimal_bpm);
		console.log('**********');
		for(var i in songs) {
			var _diff = Math.abs(songs[i]-search_bpm);
			console.log(i + ' : ' + _diff);
			if(!diff || (_diff < diff)) {
				diff = _diff;
				song = i;
			}
		}
		now_playing_bpm = optimal_bpm;
		if(now_song != song) next_song = song;
		last_song_selected_time = new Date().getTime();
	}

	function playNextSong() {
		if(next_song) {
			$('.js-song-'+next_audio_index+'-name').text(next_song + ' (' +songs[next_song]+ ')');
			$('.js-song-'+next_audio_index+'-audio-source').attr('src', 'mp3/'+next_song).detach().appendTo('.js-song-'+next_audio_index+'-audio')
			now_song = next_song;
			next_song = null;

			//transition
			$('.js-song-'+next_audio_index+'-audio').animate({volume: 1}, 3000);
			next_audio_index = 3 - next_audio_index;
			$('.js-song-'+next_audio_index+'-audio').animate({volume: 0}, 3000);
		}
	}


	//http://songbpm.com/?artist=kanye+west&title=gold+digger
	var songs = {
		'9. The Beatles - Everyday Chemistry - Days Like These.mp3' : 62,
		'10. The Beatles - Everyday Chemistry - Saturday Night.mp3' : 62,
		'5. The Beatles - Everyday Chemistry - Jenn.mp3' : 68,
		'4. The Beatles - Everyday Chemistry - Sick To Death.mp3' : 69,
		'6. The Beatles - Everyday Chemistry - Im Just Sitting Here.mp3' : 73,
		'Black James Franco - Sun House - 04 Dollar Store Hoe.mp3' : 74,
		'Black James Franco - Sun House - 02 Naked by Choice.mp3' : 79,
		'Black James Franco - Sun House - 06 Cinquemani.mp3' : 79,
		'Black James Franco - Sun House - 03 1 in 10,000.mp3' : 80,
		'3. The Beatles - Everyday Chemistry - Anybody Else.mp3' : 92,
		'2. The Beatles - Everyday Chemistry - Talking To Myself.mp3' : 96,
		'11. The Beatles - Everyday Chemistry - Mr Gators Swamp Jamboree.mp3' : 96,
		'7. The Beatles - Everyday Chemistry - Soldier Boy.mp3' : 103
	};

});
</script>

<h1>Recent BPM: <span class="js-recent-bpm-list">-</span></h1>
<h1>Confidence: <span class="js-signal-noise">-</span></h1>
<h1>Confirmed BPM: <span class="js-bpm">-</span></h1>

<h1>Song 1: <span class="js-song-1-name">-</span></h1>
<audio autoplay controls class="js-song-1-audio"><source class="js-song-1-audio-source" type="audio/mpeg"></audio>

<h1>Song 2: <span class="js-song-2-name">-</span></h1>
<audio autoplay controls class="js-song-2-audio"><source class="js-song-2-audio-source" type="audio/mpeg"></audio>

<style>
body {
	font-family:sans-serif;
}
span {
	padding:0 0.2em;
}
.good {
	color:#090;
	background:#cfc;
}
.bad {
	color:#c00;
	background:#fcc;
}
</style>